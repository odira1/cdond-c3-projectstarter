---
- name: "configuration play."
  hosts: web
  user: ubuntu
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml

    # Get the environment variables from CircleCI and add to the EC2 instance
  environment:
    - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"
    - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"
    - TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
    - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
    - TYPEORM_PORT: 5432
    - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
    - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
    - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
    - TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
    - TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"
    - TYPEORM_DRIVER_EXTRA: "{{ lookup('env', 'TYPEORM_DRIVER_EXTRA')}}"

  pre_tasks:
    - name: "upgrade packages"
      become: yes
      apt:
        upgrade: yes
      register: result
      until: result is success
      retries: 5
      delay: 5
      ignore_errors: yes

    - name: "install packages"
      apt:
        name: "{{ packages }}"
        state: latest
        update_cache: yes
        force_apt_get: yes
      become: yes
      vars:
        packages:
          - python3
          - python3-pip
          - tar
          - nodejs
          - npm

    - name: "install pm2"
      become: yes
      npm:
        name: pm2
        global: yes
        production: yes
        state: present

  roles:
    - deploy
